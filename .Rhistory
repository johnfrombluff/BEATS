update(m.5pc, . ~ . + as.numeric(TgWalk) + as.numeric(TgPref)  +as.numeric(TgCarOth) )
update(m.5pc, . ~ . + as.numeric(TgWalk) +nas.numeric(TgCarOth) )
update(m.5pc, . ~ . + as.numeric(TgWalk) + as.numeric(TgCarOth) )
update(m.5pc, . ~ . + as.numeric(TgWalk) + as.numeric(TgCarOth) - Datuse )
update(m.5pc, . ~ . + as.numeric(TgWalk) + as.numeric(TgCarOth) -as.numeric(Datuse) )
update(m.5pc, . ~ . + as.numeric(TgWalk) + as.numeric(TgCarOth) -as.numeric(Datuse) -as.numeric(WSbsweat))
update(m.5pc, . ~ . + as.numeric(TgWalk) + as.numeric(TgCarOth) -as.numeric(Datuse) -as.numeric(WSbsweat)-as.numeric(WSpsh))
update(m.5pc, . ~ . + as.numeric(TgWalk) + as.numeric(TgCarOth) -as.numeric(Datuse) -as.numeric(WSbsweat)-as.numeric(WSpsh)- as.numeric(WSAstim))
update(m.5pc, . ~ . + as.numeric(TgWalk) + as.numeric(TgCarOth) -as.numeric(Datuse) -as.numeric(WSbsweat)-as.numeric(WSpsh)- as.numeric(WSAstim)-as.numeric(WSchat))
update(m.5pc, . ~ . + as.numeric(TgWalk) + as.numeric(TgCarOth) -as.numeric(Datuse) -as.numeric(WSbsweat)-as.numeric(WSpsh)- as.numeric(WSAstim)-as.numeric(WSchat)-as.numeric(WSpunsafe))
update(m.5pc, . ~ . + as.numeric(TgWalk) + as.numeric(TgCarOth) -as.numeric(Datuse) -as.numeric(WSbsweat)-as.numeric(WSpsh)- as.numeric(WSAstim)-as.numeric(WSchat)-as.numeric(WSpunsafe)-as.numeric(WSbplan))
update(m.5pc, . ~ . + as.numeric(TgWalk) + as.numeric(TgCarOth) -as.numeric(Datuse) -as.numeric(WSbsweat)-as.numeric(WSpsh)- as.numeric(WSAstim)-as.numeric(WSchat)-as.numeric(WSpunsafe)-as.numeric(WSbplan)-as.numeric(WSbsafe))
update(m.5pc, . ~ . + as.numeric(TgWalk) -as.numeric(Datuse) -as.numeric(WSbsweat)-as.numeric(WSpsh)- as.numeric(WSAstim)-as.numeric(WSchat)-as.numeric(WSpunsafe)-as.numeric(WSbplan)-as.numeric(WSbsafe))
update(m.5pc, . ~ . + as.numeric(TgWalk) -as.numeric(Datuse) -as.numeric(WSbsweat)-as.numeric(WSpsh)- as.numeric(WSAstim)-as.numeric(WSchat)-as.numeric(WSpunsafe)-as.numeric(WSbplan)-as.numeric(WSbsafe) - as.numeric(raincoat))
update(m.5pc, . ~ . + as.numeric(TgWalk) -as.numeric(Datuse) -as.numeric(WSbsweat)-as.numeric(WSpsh)- as.numeric(WSAstim)-as.numeric(WSchat)-as.numeric(WSpunsafe)-as.numeric(WSbplan)-as.numeric(WSbsafe) - as.numeric(raincoat)-as.numeric(WSbdist))
m.5pc.b <-update(m.5pc, . ~ . + as.numeric(TgWalk) -as.numeric(Datuse) -as.numeric(WSbsweat)-as.numeric(WSpsh)- as.numeric(WSAstim)-as.numeric(WSchat)-as.numeric(WSpunsafe)-as.numeric(WSbplan)-as.numeric(WSbsafe) - as.numeric(raincoat)-as.numeric(WSbdist))
update(m.5pc, . ~ . eth3)
update(m.5pc, . ~ . + eth3)
update(m.5pc.b, . ~ . + eth3)
names(dat.m)
update(m.5pc.b, . ~ . + BMI_2cat)
update(m.5pc.b)
update(m.5pc.b, . ~ . = WCSrbor)
update(m.5pc.b, . ~ . - WCSrbor)
update(m.5pc.b, . ~ . - as.numeric(WCSrbor))
update(m.5pc.b, . ~ . - as.numeric(WCSrbor)-as.numeric(WScontrol))
m.1pc <-update(m.5pc.b, . ~ . - as.numeric(WCSrbor)-as.numeric(WScontrol))
m.1pc <-update(m.5pc.b, . ~ . - as.numeric(WCSrbor)-as.numeric(WScontrol)-as.numeric(WSno))
m.1pc
myCor(dat[, ats.vars])
cor(dat[, ats.vars])
cor(as.numeric(dat[, ats.vars]))
names(dat.ats)
head(dat.ats$Dist2School)
label(dat.ats$Dist2School)
source("test.R")
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + as.numeric(HMcars) + as.numeric(WSpsh) + as.numeric(WSpunsafe) + as.numeric(WSpwalk) + as.numeric(WSAint) + as.numeric(WSAnice) + as.numeric(WSAstim) + as.numeric(WSAnice) + as.numeric(WSAgood) + as.numeric(WSAuseful) + as.numeric(WSAsafe) + as.numeric(WCSone) + as.numeric(WSchat) + as.numeric(WSfsh) + as.numeric(WSbfri) + as.numeric(WSf5ws) + as.numeric(WSbwant) + as.numeric(WStired) + as.numeric(WSno) + as.numeric(WSbstuff) + as.numeric(WSbsweat) + as.numeric(WSbplan) + as.numeric(WSbsched) + as.numeric(Dlikedriven) + as.numeric(F3_landuseaccess) + as.numeric(WSbdist) + as.numeric(WStime) + as.numeric(WSbsafe) + as.numeric(WSbfootp) + as.numeric(WCShills) + as.numeric(WCSrbor) + as.numeric(TSlike) + as.numeric(WScontrol) + as.numeric(WSintend) + as.numeric(WSwant) + as.numeric(WSconf) + as.numeric(WS2wks) + as.numeric(Icardrive) + as.numeric(Icarown) + as.numeric(hsiblings) + as.numeric(raincoat) + as.numeric(TgCarOth) + as.numeric(TgWalk) + as.numeric(TgPref) + as.numeric(TgPrefR) + as.numeric(Datuse), x=T, y=T, data=dat.m ), cluster=dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + NZDepCat, x=T, y=T, data=dat.m ), dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + as.numeric(HMcars) + as.numeric(WSpsh) + as.numeric(WSpunsafe) + as.numeric(WSpwalk) + as.numeric(WSAint) + as.numeric(WSAnice) + as.numeric(WSAstim) + as.numeric(WSAnice) + as.numeric(WSAgood) + as.numeric(WSAuseful) + as.numeric(WSAsafe) + as.numeric(WCSone) + as.numeric(WSchat) + as.numeric(WSfsh) + as.numeric(WSbfri) + as.numeric(WSf5ws) + as.numeric(WSbwant) + as.numeric(WStired) + as.numeric(WSno) + as.numeric(WSbstuff) + as.numeric(WSbsweat) + as.numeric(WSbplan) + as.numeric(WSbsched) + as.numeric(Dlikedriven) + as.numeric(F3_landuseaccess) + as.numeric(WSbdist) + as.numeric(WStime) + as.numeric(WSbsafe) + as.numeric(WSbfootp) + as.numeric(WCShills) + as.numeric(WCSrbor) + as.numeric(TSlike) + as.numeric(WScontrol) + as.numeric(WSintend) + as.numeric(WSwant) + as.numeric(WSconf) + as.numeric(WS2wks) + as.numeric(Icardrive) + as.numeric(Icarown) + as.numeric(hsiblings) + as.numeric(raincoat) + as.numeric(TgCarOth) + as.numeric(TgWalk) + as.numeric(TgPref) + as.numeric(TgPrefR) + as.numeric(Datuse), x=T, y=T, data=dat.m ), cluster=dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + NZDepCat, x=T, y=T, data=dat.m ), dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + eth3, x=T, y=T, data=dat.m ), dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + BMI_2cat_Overweight, x=T, y=T, data=dat.m ), dat.m$school))
sink()
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + NZDepCat, x=T, y=T, data=dat.m ), dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + eth3, x=T, y=T, data=dat.m ), dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + BMI_2cat_Overweight, x=T, y=T, data=dat.m ), dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + NZDepCat, x=T, y=T, data=dat.m ), dat.m$school))
aov(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + BMI_2cat_Overweight, x=T, y=T, data=dat.m ), dat.m$school))
anova(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + BMI_2cat_Overweight, x=T, y=T, data=dat.m ), dat.m$school))
anova(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + NZDepCat, x=T, y=T, data=dat.m ), dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + as.numeric(HMcars) + as.numeric(WSpsh) + as.numeric(WSpunsafe) + as.numeric(WSpwalk) + as.numeric(WSAint) + as.numeric(WSAnice) + as.numeric(WSAstim) + as.numeric(WSAnice) + as.numeric(WSAgood) + as.numeric(WSAuseful) + as.numeric(WSAsafe) + as.numeric(WCSone) + as.numeric(WSchat) + as.numeric(WSfsh) + as.numeric(WSbfri) + as.numeric(WSf5ws) + as.numeric(WSbwant) + as.numeric(WStired) + as.numeric(WSno) + as.numeric(WSbstuff) + as.numeric(WSbsweat) + as.numeric(WSbplan) + as.numeric(WSbsched) + as.numeric(Dlikedriven) + as.numeric(F3_landuseaccess) + as.numeric(WSbdist) + as.numeric(WStime) + as.numeric(WSbsafe) + as.numeric(WSbfootp) + as.numeric(WCShills) + as.numeric(WCSrbor) + as.numeric(TSlike) + as.numeric(WScontrol) + as.numeric(WSintend) + as.numeric(WSwant) + as.numeric(WSconf) + as.numeric(WS2wks) + as.numeric(Icardrive) + as.numeric(Icarown) + as.numeric(hsiblings) + as.numeric(raincoat) + as.numeric(TgCarOth) + as.numeric(TgPref) + as.numeric(TgPrefR) + as.numeric(Datuse), x=T, y=T, data=dat.m ), cluster=dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + as.numeric(HMcars) + as.numeric(WSpsh) + as.numeric(WSpunsafe) + as.numeric(WSpwalk) + as.numeric(WSAint) + as.numeric(WSAnice) + as.numeric(WSAstim) + as.numeric(WSAnice) + as.numeric(WSAgood) + as.numeric(WSAuseful) + as.numeric(WSAsafe) + as.numeric(WCSone) + as.numeric(WSchat) + as.numeric(WSfsh) + as.numeric(WSbfri) + as.numeric(WSf5ws) + as.numeric(WSbwant) + as.numeric(WStired) + as.numeric(WSno) + as.numeric(WSbstuff) + as.numeric(WSbsweat) + as.numeric(WSbplan) + as.numeric(WSbsched) + as.numeric(Dlikedriven) + as.numeric(F3_landuseaccess) + as.numeric(WSbdist) + as.numeric(WStime) + as.numeric(WSbsafe) + as.numeric(WSbfootp) + as.numeric(WCShills) + as.numeric(WCSrbor) + as.numeric(TSlike) + as.numeric(WScontrol) + as.numeric(WSintend) + as.numeric(WSwant) + as.numeric(WSconf) + as.numeric(WS2wks) + as.numeric(Icardrive) + as.numeric(Icarown) + as.numeric(hsiblings) + as.numeric(raincoat) + as.numeric(TgPref) + as.numeric(TgPrefR) + as.numeric(Datuse), x=T, y=T, data=dat.m ), cluster=dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + as.numeric(HMcars) + as.numeric(WSpsh) + as.numeric(WSpunsafe) + as.numeric(WSpwalk) + as.numeric(WSAint) + as.numeric(WSAnice) + as.numeric(WSAstim) + as.numeric(WSAnice) + as.numeric(WSAgood) + as.numeric(WSAuseful) + as.numeric(WSAsafe) + as.numeric(WCSone) + as.numeric(WSchat) + as.numeric(WSfsh) + as.numeric(WSbfri) + as.numeric(WSf5ws) + as.numeric(WSbwant) + as.numeric(WStired) + as.numeric(WSno) + as.numeric(WSbstuff) + as.numeric(WSbsweat) + as.numeric(WSbplan) + as.numeric(WSbsched) + as.numeric(Dlikedriven) + as.numeric(F3_landuseaccess) + as.numeric(WSbdist) + as.numeric(WStime) + as.numeric(WSbsafe) + as.numeric(WSbfootp) + as.numeric(WCShills) + as.numeric(WCSrbor) + as.numeric(TSlike) + as.numeric(WScontrol) + as.numeric(WSintend) + as.numeric(WSwant) + as.numeric(WSconf) + as.numeric(WS2wks) + as.numeric(Icardrive) + as.numeric(Icarown) + as.numeric(hsiblings) + as.numeric(raincoat) + as.numeric(TgPref) + as.numeric(Datuse), x=T, y=T, data=dat.m ), cluster=dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + as.numeric(HMcars) + as.numeric(WSpsh) + as.numeric(WSpunsafe) + as.numeric(WSpwalk) + as.numeric(WSAint) + as.numeric(WSAnice) + as.numeric(WSAstim) + as.numeric(WSAnice) + as.numeric(WSAgood) + as.numeric(WSAuseful) + as.numeric(WSAsafe) + as.numeric(WCSone) + as.numeric(WSchat) + as.numeric(WSfsh) + as.numeric(WSbfri) + as.numeric(WSf5ws) + as.numeric(WSbwant) + as.numeric(WStired) + as.numeric(WSno) + as.numeric(WSbstuff) + as.numeric(WSbsweat) + as.numeric(WSbplan) + as.numeric(WSbsched) + as.numeric(Dlikedriven) + as.numeric(F3_landuseaccess) + as.numeric(WSbdist) + as.numeric(WStime) + as.numeric(WSbsafe) + as.numeric(WSbfootp) + as.numeric(WCShills) + as.numeric(WCSrbor) + as.numeric(TSlike) + as.numeric(WScontrol) + as.numeric(WSintend) + as.numeric(WSwant) + as.numeric(WSconf) + as.numeric(WS2wks) + as.numeric(Icardrive) + as.numeric(Icarown) + as.numeric(hsiblings) + as.numeric(raincoat) + as.numeric(Datuse), x=T, y=T, data=dat.m ), cluster=dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + as.numeric(HMcars) + as.numeric(WSpsh) + as.numeric(WSpunsafe) + as.numeric(WSpwalk) + as.numeric(WSAint) + as.numeric(WSAnice) + as.numeric(WSAstim) + as.numeric(WSAnice) + as.numeric(WSAgood) + as.numeric(WSAuseful) + as.numeric(WSAsafe) + as.numeric(WCSone) + as.numeric(WSchat) + as.numeric(WSfsh) + as.numeric(WSbfri) + as.numeric(WSf5ws) + as.numeric(WSbwant) + as.numeric(WStired) + as.numeric(WSno) + as.numeric(WSbstuff) + as.numeric(WSbsweat) + as.numeric(WSbplan) + as.numeric(WSbsched) + as.numeric(Dlikedriven) + as.numeric(F3_landuseaccess) + as.numeric(WSbdist) + as.numeric(WStime) + as.numeric(WSbsafe) + as.numeric(WSbfootp) + as.numeric(WCShills) + as.numeric(WCSrbor) + as.numeric(TSlike) + as.numeric(WScontrol) + as.numeric(WSintend) + as.numeric(WSwant) + as.numeric(WSconf) + as.numeric(WS2wks) + as.numeric(Icardrive) + as.numeric(Icarown) + as.numeric(hsiblings) + as.numeric(raincoat) + as.numeric(TgCarOth)  + as.numeric(TgPrefR) + as.numeric(Datuse), x=T, y=T, data=dat.m ), cluster=dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + as.numeric(HMcars) + as.numeric(WSpsh) + as.numeric(WSpunsafe) + as.numeric(WSpwalk) + as.numeric(WSAint) + as.numeric(WSAnice) + as.numeric(WSAstim) + as.numeric(WSAnice) + as.numeric(WSAgood) + as.numeric(WSAuseful) + as.numeric(WSAsafe) + as.numeric(WCSone) + as.numeric(WSchat) + as.numeric(WSfsh) + as.numeric(WSbfri) + as.numeric(WSf5ws) + as.numeric(WSbwant) + as.numeric(WStired) + as.numeric(WSno) + as.numeric(WSbstuff) + as.numeric(WSbsweat) + as.numeric(WSbplan) + as.numeric(WSbsched) + as.numeric(Dlikedriven) + as.numeric(F3_landuseaccess) + as.numeric(WSbdist) + as.numeric(WStime) + as.numeric(WSbsafe) + as.numeric(WSbfootp) + as.numeric(WCShills) + as.numeric(WCSrbor) + as.numeric(TSlike) + as.numeric(WScontrol) + as.numeric(WSintend) + as.numeric(WSwant) + as.numeric(WSconf) + as.numeric(WS2wks) + as.numeric(Icardrive) + as.numeric(Icarown) + as.numeric(hsiblings) + as.numeric(raincoat) + as.numeric(TgCarOth)  + as.numeric(Datuse), x=T, y=T, data=dat.m ), cluster=dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + as.numeric(HMcars) + as.numeric(WSpsh) + as.numeric(WSpunsafe) + as.numeric(WSpwalk) + as.numeric(WSAint) + as.numeric(WSAnice) + as.numeric(WSAstim) + as.numeric(WSAnice) + as.numeric(WSAgood) + as.numeric(WSAuseful) + as.numeric(WSAsafe) + as.numeric(WCSone) + as.numeric(WSchat) + as.numeric(WSfsh) + as.numeric(WSbfri) + as.numeric(WSf5ws) + as.numeric(WSbwant) + as.numeric(WStired) + as.numeric(WSno) + as.numeric(WSbstuff) + as.numeric(WSbsweat) + as.numeric(WSbplan) + as.numeric(WSbsched) + as.numeric(Dlikedriven) + as.numeric(F3_landuseaccess) + as.numeric(WSbdist) + as.numeric(WStime) + as.numeric(WSbsafe) + as.numeric(WSbfootp) + as.numeric(WCShills) + as.numeric(WCSrbor) + as.numeric(TSlike) + as.numeric(WScontrol) + as.numeric(WSintend) + as.numeric(WSwant) + as.numeric(WSconf) + as.numeric(WS2wks) + as.numeric(Icardrive) + as.numeric(Icarown) + as.numeric(hsiblings) + as.numeric(raincoat)  + as.numeric(Datuse), x=T, y=T, data=dat.m ), cluster=dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + as.numeric(HMcars) + as.numeric(WSpsh) + as.numeric(WSpunsafe) + as.numeric(WSpwalk) + as.numeric(WSAint) + as.numeric(WSAnice) + as.numeric(WSAstim) + as.numeric(WSAnice) + as.numeric(WSAgood) + as.numeric(WSAuseful) + as.numeric(WSAsafe) + as.numeric(WCSone) + as.numeric(WSchat) + as.numeric(WSfsh) + as.numeric(WSbfri) + as.numeric(WSf5ws) + as.numeric(WSbwant) + as.numeric(WStired) + as.numeric(WSno) + as.numeric(WSbstuff) + as.numeric(WSbsweat) + as.numeric(WSbplan) + as.numeric(WSbsched) + as.numeric(Dlikedriven) + as.numeric(F3_landuseaccess) + as.numeric(WSbdist) + as.numeric(WStime) + as.numeric(WSbsafe) + as.numeric(WSbfootp) + as.numeric(WCShills) + as.numeric(WCSrbor) + as.numeric(TSlike) + as.numeric(WScontrol) + as.numeric(WSintend) + as.numeric(WSwant) + as.numeric(WSconf) + as.numeric(WS2wks) + as.numeric(Icardrive) + as.numeric(Icarown) + as.numeric(hsiblings) + as.numeric(raincoat) + as.numeric(TgWalk) + as.numeric(Datuse), x=T, y=T, data=dat.m ), cluster=dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + as.numeric(HMcars) + as.numeric(WSpsh) + as.numeric(WSpunsafe) + as.numeric(WSpwalk) + as.numeric(WSAint) + as.numeric(WSAnice) + as.numeric(WSAstim) + as.numeric(WSAnice) + as.numeric(WSAgood) + as.numeric(WSAuseful) + as.numeric(WSAsafe) + as.numeric(WCSone) + as.numeric(WSchat) + as.numeric(WSfsh) + as.numeric(WSbfri) + as.numeric(WSf5ws) + as.numeric(WSbwant) + as.numeric(WStired) + as.numeric(WSno) + as.numeric(WSbstuff) + as.numeric(WSbsweat) + as.numeric(WSbplan) + as.numeric(WSbsched) + as.numeric(Dlikedriven) + as.numeric(F3_landuseaccess) + as.numeric(WSbdist) + as.numeric(WStime) + as.numeric(WSbsafe) + as.numeric(WSbfootp) + as.numeric(WCShills) + as.numeric(WCSrbor) + as.numeric(TSlike) + as.numeric(WScontrol) + as.numeric(WSintend) + as.numeric(WSwant) + as.numeric(WSconf) + as.numeric(WS2wks) + as.numeric(Icardrive) + as.numeric(Icarown) + as.numeric(hsiblings) + as.numeric(raincoat) + as.numeric(TgBike) + as.numeric(Datuse), x=T, y=T, data=dat.m ), cluster=dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + as.numeric(HMcars) + as.numeric(WSpsh) + as.numeric(WSpunsafe) + as.numeric(WSpwalk) + as.numeric(WSAint) + as.numeric(WSAnice) + as.numeric(WSAstim) + as.numeric(WSAnice) + as.numeric(WSAgood) + as.numeric(WSAuseful) + as.numeric(WSAsafe) + as.numeric(WCSone) + as.numeric(WSchat) + as.numeric(WSfsh) + as.numeric(WSbfri) + as.numeric(WSf5ws) + as.numeric(WSbwant) + as.numeric(WStired) + as.numeric(WSno) + as.numeric(WSbstuff) + as.numeric(WSbsweat) + as.numeric(WSbplan) + as.numeric(WSbsched) + as.numeric(Dlikedriven) + as.numeric(F3_landuseaccess) + as.numeric(WSbdist) + as.numeric(WStime) + as.numeric(WSbsafe) + as.numeric(WSbfootp) + as.numeric(WCShills) + as.numeric(WCSrbor) + as.numeric(TSlike) + as.numeric(WScontrol) + as.numeric(WSintend) + as.numeric(WSwant) + as.numeric(WSconf) + as.numeric(WS2wks) + as.numeric(Icardrive) + as.numeric(Icarown) + as.numeric(hsiblings) + as.numeric(raincoat) + as.numeric(TgPref) + as.numeric(Datuse), x=T, y=T, data=dat.m ), cluster=dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + as.numeric(HMcars) + as.numeric(WSpsh) + as.numeric(WSpunsafe) + as.numeric(WSpwalk) + as.numeric(WSAint) + as.numeric(WSAnice) + as.numeric(WSAstim) + as.numeric(WSAnice) + as.numeric(WSAgood) + as.numeric(WSAuseful) + as.numeric(WSAsafe) + as.numeric(WCSone) + as.numeric(WSchat) + as.numeric(WSfsh) + as.numeric(WSbfri) + as.numeric(WSf5ws) + as.numeric(WSbwant) + as.numeric(WStired) + as.numeric(WSno) + as.numeric(WSbstuff) + as.numeric(WSbsweat) + as.numeric(WSbplan) + as.numeric(WSbsched) + as.numeric(Dlikedriven) + as.numeric(F3_landuseaccess) + as.numeric(WSbdist) + as.numeric(WStime) + as.numeric(WSbsafe) + as.numeric(WSbfootp) + as.numeric(WCShills) + as.numeric(WCSrbor) + as.numeric(TSlike) + as.numeric(WScontrol) + as.numeric(WSintend) + as.numeric(WSwant) + as.numeric(WSconf) + as.numeric(WS2wks) + as.numeric(Icardrive) + as.numeric(Icarown) + as.numeric(hsiblings) + as.numeric(raincoat) + as.numeric(TgPrefR) + as.numeric(Datuse), x=T, y=T, data=dat.m ), cluster=dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + as.numeric(HMcars) + as.numeric(WSpsh) + as.numeric(WSpunsafe) + as.numeric(WSpwalk) + as.numeric(WSAint) + as.numeric(WSAnice) + as.numeric(WSAstim) + as.numeric(WSAnice) + as.numeric(WSAgood) + as.numeric(WSAuseful) + as.numeric(WSAsafe) + as.numeric(WCSone) + as.numeric(WSchat) + as.numeric(WSfsh) + as.numeric(WSbfri) + as.numeric(WSf5ws) + as.numeric(WSbwant) + as.numeric(WStired) + as.numeric(WSno) + as.numeric(WSbstuff) + as.numeric(WSbsweat) + as.numeric(WSbplan) + as.numeric(WSbsched) + as.numeric(Dlikedriven) + as.numeric(F3_landuseaccess) + as.numeric(WSbdist) + as.numeric(WStime) + as.numeric(WSbsafe) + as.numeric(WSbfootp) + as.numeric(WCShills) + as.numeric(WCSrbor) + as.numeric(TSlike) + as.numeric(WScontrol) + as.numeric(WSintend) + as.numeric(WSwant) + as.numeric(WSconf) + as.numeric(WS2wks) + as.numeric(Icardrive) + as.numeric(Icarown) + as.numeric(hsiblings) + as.numeric(raincoat) + as.numeric(CarOth) + as.numeric(Datuse), x=T, y=T, data=dat.m ), cluster=dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + as.numeric(HMcars) + as.numeric(WSpsh) + as.numeric(WSpunsafe) + as.numeric(WSpwalk) + as.numeric(WSAint) + as.numeric(WSAnice) + as.numeric(WSAstim) + as.numeric(WSAnice) + as.numeric(WSAgood) + as.numeric(WSAuseful) + as.numeric(WSAsafe) + as.numeric(WCSone) + as.numeric(WSchat) + as.numeric(WSfsh) + as.numeric(WSbfri) + as.numeric(WSf5ws) + as.numeric(WSbwant) + as.numeric(WStired) + as.numeric(WSno) + as.numeric(WSbstuff) + as.numeric(WSbsweat) + as.numeric(WSbplan) + as.numeric(WSbsched) + as.numeric(Dlikedriven) + as.numeric(F3_landuseaccess) + as.numeric(WSbdist) + as.numeric(WStime) + as.numeric(WSbsafe) + as.numeric(WSbfootp) + as.numeric(WCShills) + as.numeric(WCSrbor) + as.numeric(TSlike) + as.numeric(WScontrol) + as.numeric(WSintend) + as.numeric(WSwant) + as.numeric(WSconf) + as.numeric(WS2wks) + as.numeric(Icardrive) + as.numeric(Icarown) + as.numeric(hsiblings) + as.numeric(raincoat) + as.numeric(CarOther) + as.numeric(Datuse), x=T, y=T, data=dat.m ), cluster=dat.m$school))
print(robcov(lrm(ATS_f ~ Dist2School + gender + Age_at_Survey + as.numeric(HMcars) + as.numeric(WSpsh) + as.numeric(WSpunsafe) + as.numeric(WSpwalk) + as.numeric(WSAint) + as.numeric(WSAnice) + as.numeric(WSAstim) + as.numeric(WSAnice) + as.numeric(WSAgood) + as.numeric(WSAuseful) + as.numeric(WSAsafe) + as.numeric(WCSone) + as.numeric(WSchat) + as.numeric(WSfsh) + as.numeric(WSbfri) + as.numeric(WSf5ws) + as.numeric(WSbwant) + as.numeric(WStired) + as.numeric(WSno) + as.numeric(WSbstuff) + as.numeric(WSbsweat) + as.numeric(WSbplan) + as.numeric(WSbsched) + as.numeric(Dlikedriven) + as.numeric(F3_landuseaccess) + as.numeric(WSbdist) + as.numeric(WStime) + as.numeric(WSbsafe) + as.numeric(WSbfootp) + as.numeric(WCShills) + as.numeric(WCSrbor) + as.numeric(TSlike) + as.numeric(WScontrol) + as.numeric(WSintend) + as.numeric(WSwant) + as.numeric(WSconf) + as.numeric(WS2wks) + as.numeric(Icardrive) + as.numeric(Icarown) + as.numeric(hsiblings) + as.numeric(raincoat) + as.numeric(TgCarOth) + as.numeric(Datuse), x=T, y=T, data=dat.m ), cluster=dat.m$school))
ls()
m.5pc
m.5pc.b
m.5pc
with(dat.m, mean(Dist2School))
with(dat.m, mean(Dist2School, na.rm=TRUE))
with(dat.m, max(Dist2School, na.rm=TRUE))
with(dat.m, max(Dist2School_km, na.rm=TRUE))
with(dat.m, table(Include))
with(dat.m, table(Include_dist))
with(dat.m, table(Include_Dist))
require(foreign)
dir  <- "/home/john/Dropbox/Research/Collaboration/BEATS/John/W2S"
#file <- "BEATS_SS_ForWalk2School_150507.sav"
file <- "BEATS_SS_ForWalk2School_160201_COMPLETEdata.sav"
dat <- read.spss( paste(dir, file, sep="/"), to.data.frame=TRUE )
rm(dir, file)
source( "data-setup-W2S.R")
```{r label=ATS-Dist, dependson="data-setup", fig.cap="Figure 1: Empirical probability of ATS by distance from school", fig.align='center'}
emp <- NULL
plot_cutoff <- 10000
emp <- NULL
plot_cutoff <- 10000
with( dat.full[dat.full$Dist2School <= plot_cutoff, ],
{
for ( i in 1:length(Dist2School ) )
emp[i] <- prop.table(table(ATS_f[ Dist2School < Dist2School[i]]))["Walk"]
emp_prob <- data.frame( dist=Dist2School, true=ATS_f, prob=emp )
p <- ggplot( emp_prob, aes( dist, prob) )
p <- p + labs(x="Distance to school (m)", y="Probability of Walking to School" )
p <- p + geom_point(size=1)
p <- p + geom_smooth( size=1, method="gam", formula= y ~ s( x, bs = "cs") )
p <- p + annotate("text", label="Optimal distance\nthreshold: ≤ 2,200m\nSensitivity: 84%\nSpecificity: 84%\nAUC: 93%", x=4000, y=0.8, hjust="l")
p + geom_vline(x=2200)
}
)
dim(dat_full)
require( car )
#dat$ATS_f      <- factor(dat$ATS_wMulti_2c, labels=c("Don't walk", "Walk") )
dat$ATS <- dat$ATS_Corrected_Clean
dat$ATS_f      <- dat$ATvsMT; levels(dat$ATS_f) <-c("Don't walk", "Walk")
dat$whodecides <- recode(  dat$tsdecision, "'My parents'='Other(s)'; 'School'='Other(s)'")
#dat$BMI_f      <- ordered( recode(dat$BMI_4cat, "1=0;2=1;3=2"), labels=c("Normal", "Overweightl", "Obese") )
dat$BMI_f      <- ordered( recode(dat$BMI_4cat, " 'Underweight'='Normal Weight' ") )
dat$cars3 <- ordered(recode( dat$HMcars,"'Two'='Two or more'; 'Three'='Two or more'; 'Four or more'='Two or more'" ) )
dat$BMI_f <- factor(dat$BMI_2cat, labels=c("Healthy", "Unhealthy") )
detach(package:car)
require( rms )
label(dat$cars3) <- "Number of cars at home"
levels(dat$NZDepCat3) <- c("High", "Med", "Low")
# Transform rating scale variables to numeric
# Attitudes
dat$interesting   <- as.numeric(dat$WSAint);     label(dat$interesting) <- "Walking to school is interesting"
dat$pleasant      <- as.numeric(dat$WSAnice);    label(dat$pleasant)    <- "Walking to school is pleasant"
dat$boring        <- as.numeric(dat$WSAstim);    label(dat$boring)      <- "Walking to school is boring"
dat$healthy       <- as.numeric(dat$WSAhealthy); label(dat$healthy)     <- "Walking to school is healthy"
dat$useful        <- as.numeric(dat$WSAuseful);  label(dat$useful)      <- "Walking to school is useful"
dat$safe          <- as.numeric(dat$WSAsafe);    label(dat$safe)        <- "Walking to school is safe"
# Motivations
dat$exercise      <- as.numeric(dat$WSexercise); label(dat$exercise)    <- "Walking is a way to get exercise"
dat$chat          <- as.numeric(dat$WSchat);     label(dat$chat    )    <- "I can chat to friends walking"
# Barriers
dat$onway         <- as.numeric(dat$WCSone);     label(dat$onway   )    <- "School is on the way to somewhere"
dat$time          <- as.numeric(dat$WStime);     label(dat$time    )    <- "Walking takes too much time"
dat$stuff         <- as.numeric(dat$WSbstuff);   label(dat$stuff   )    <- "I have too much stuff"
dat$sched         <- as.numeric(dat$WSbsched);   label(dat$sched   )    <- "After-school schedule"
dat$planning      <- as.numeric(dat$WSbplan);    label(dat$planning)    <- "Takes too much planning"
dat$sweaty        <- as.numeric(dat$WSbsweat);   label(dat$sweaty  )    <- "Makes me sweat"
dat$unsafe        <- as.numeric(dat$WSbsafe);    label(dat$unsafe  )    <- "Not safe"
dat$tired         <- as.numeric(dat$WStired);    label(dat$tired   )    <- "Often too tired"
dat$desire        <- as.numeric(dat$WSbwant);    label(dat$desire  )    <- "I want to walk to school"
# Control
dat$confd         <- as.numeric(dat$WSconf);     label(dat$confd      )  <- "I am confident I can walk"
dat$control       <- as.numeric(dat$WScontrol);  label(dat$control    )  <- "I am in control of travel mode"
dat$intention     <- as.numeric(dat$WSintend);   label(dat$intention)    <- "I intend to walk to school"
# Family
dat$adults        <- as.numeric(dat$hadults);    label(dat$adults     )  <- "Number of adults at home"
dat$siblings      <- as.numeric(dat$hsiblings);  label(dat$siblings    ) <- "Number of siblings at home"
dat$n_cars        <- as.numeric(dat$HMcars);     label(dat$n_cars     )  <- "Number of cars at home"
dat$parents_walk  <- as.numeric(dat$WSpwalk);    label(dat$parents_walk) <- "My parents walk regularly"
dat$parents_safe  <- as.numeric(dat$WSpunsafe);  label(dat$parents_safe) <- "My parents think its not safe"
# Encouragement and role-modelling
dat$parents_say   <- as.numeric(dat$WSpsh);      label(dat$parents_say)  <- "My parents enourage me to walk"
dat$friends_say   <- as.numeric(dat$WSfsh);      label(dat$friends_say)  <- "My friends enourage me to walk"
dat$school_says   <- as.numeric(dat$WSeschool);  label(dat$school_says)  <- "My school enourages me to walk"
dat$cool          <- as.numeric(dat$WSbcool);    label(dat$cool    )     <- "It's not cool to walk"
dat$friends_dont  <- as.numeric(dat$WSbfri);     label(dat$friends_dont) <- "My friends don't walk"
# Physical environment
dat$weather       <- as.numeric(dat$WSbweather); label(dat$weather )     <- "The weather is too bad"
dat$boring_r      <- as.numeric(dat$WCSrbor);    label(dat$boring_r)     <- "The route to school is boring"
dat$hills         <- as.numeric(dat$WCShills);   label(dat$hills   )     <- "There are too many hills on the route"
# Lifestyle
dat$regwalk          <- as.numeric(dat$TgWalk) ; label(dat$regwalk)      <- "Walking for general mobility"
# Other
label(dat$schiclose) <- "I initially enrolled at the closest school"
#dat$closest          <- as.numeric(dat$schs5close); label(dat$closest)   <- "My school is the closest to my home"
# create ordered factors and drop unused levels in the process
dat$school_decile   <- ordered(   dat$ScDecile)
dat$school_decile_n <- as.numeric(dat$school_decile)
# Make more print-friendly levels
levels(dat$PAGuideQ)  <-c("No", "Yes")
levels(dat$ScrGuide)  <-c("No", "Yes")
# Demographics and other variables not used for models
label(dat$Age_at_Survey)   <- "Age in years"
label(dat$gender)          <- "Sex"
label(dat$BMI_2cat)        <- "BMI"
label(dat$HMbike)          <- "Number of bikes at home"
label(dat$HMcars)          <- "Number of cars at home"
label(dat$tsdecision)      <- "Who decides how you travel to school?"
label(dat$NZDepCat3)       <- "NZ Deprivation Category"
label(dat$PAGuideQ)        <- "Meets physical activity guidelines"
label(dat$ScrGuide)        <- "Meets screen time guidelines"
label(dat$hsiblings )      <- "Number of siblings at home"
label(dat$whodecides)      <- "Who decides how you travel"
label(dat$school_decile_n) <- "School decile"
label(dat$NEStConnect)     <- "Connectivity"
label(dat$NGEsthetics)     <- "Aesthetics"
label(dat$Dist2School)     <- "Distance to school from home"
label(dat$BMI_f)           <- "BMI"
label(dat$BMI_4cat)        <- "Body Mass Index"
label(dat$eth3)            <- "Ethnic category"
label(dat$TscWalk)             <- "Travel to School: Walk"
label(dat$TscCarOth)           <- "Travel to School: Car (others)"
label(dat$TscCarMy)            <- "Travel to School: Car (mine)"
label(dat$TscBusPub)           <- "Travel to School: Bus (public)"
label(dat$TscBusSc)            <- "Travel to School: Bus (school"
label(dat$TSlike)              <- "Do you like the way you usually travel to school?"
label(dat$ATS)                 <- "ATS (3 categories)"
label(dat$BMI_4cat)            <- "BMI (4 categories)"
label(dat$cars3)               <- "Cars at home (3 categories)"
dat$ID <- as.numeric(as.character(dat$studyID1))
dat$school <- factor(dat$school,
labels=c("Bayfield", "Columba", "John McGlashan",
"Kaikorai", "Kavanagh", "Kings", "Logan Park",
"Otago Boys", "Otago Girls", "Queens",
"St. Hilda's", "Taeri"))
label(dat$school) <- "School"
ats.vars <- c("ID", "school", "ATS_f", "gender",
"HMcars", "NZDepCat3", "PAGuideQ",
"ScrGuide", "whodecides",
"schiclose",
"Dist2School",
"siblings", "Age_at_Survey", "school_decile_n",
"interesting", "pleasant", "boring",
"healthy", "useful", "safe", "exercise", "onway", "time",
"stuff", "sched", "planning", "sweaty", "unsafe", "tired",
"desire", "confd", "control", "intention", "adults", "n_cars",
"parents_walk", "parents_safe","parents_say", "friends_say",
"school_says", "cool", "friends_dont", "weather", "boring_r",
"hills", "regwalk",
"NEStConnect", "NGEsthetics",
"eth3",
"TscWalk", "TscCarOth", "TscCarMy", "TscBusPub", "TscBusSc",
"TSlike", "ATS", "BMI_4cat", "cars3", "tsdecision")
# Subset the data object to contain only the variables of interest
#dat.ats <- dat[ dat$boarder2 == "Not a boarder", ats.vars]
cutoff <- 8000
# Remove implausible cases
outs <- dat$Dist2School > cutoff & dat$ATS_f =="Walk"
dat  <- dat[!outs, ]
dat.ats <- dat[ , ats.vars]
#dat.ats <- dat[ dat$boarder == 1, ]
dat.full <- dat[complete.cases(dat$Dist2School, dat$ATS_f),
c("Dist2School", "ATS_f") ]
names( dat.ats )[ 2] <- "School"
names( dat.ats) [ 3] <- "W2S"
names( dat.ats )[ 4] <- "Sex"
names( dat.ats )[12] <- "Dist"
names( dat.ats )[15] <- "Age"
label(dat.ats[,1]) <- "Respondent ID"
#rm(dat.ats, dat.full, dat, cutoff, outs, ats.vars)
dat.ats <- dat.ats[ dat.ats$Dist2School <= cutoff, ]
dat.ats <- dat.ats[ complete.cases(dat.ats$W2S, dat.ats$Dist, dat.ats$School
#, dat.ats$parents_safe, dat.ats$parents_say, dat.ats$NEStConnect
#, dat.ats$NGEsthetics
), ]
dim(dat.full)
source( "data-setup-W2S.R" )
source('~/Dropbox/Research/Collaboration/BEATS/John/Analysis/Correlates of ATS/data-setup-W2S.R')
require( ggplot2 )
require( scales )
require( Gmisc )
require( rms )
require( knitr )
require( JMisc )
# Evaluate the figure caption after the plot
knitr::opts_knit$set(eval.after='fig.cap')
# Use the table counter that the htmlTable() provides
options(table_counter = TRUE)
# Use the figCapNo() with roman letters
options(fig_caption_no_roman = TRUE)
#theme_set( theme_gray( base_size = 10 ))
#theme_update( legend.key.width = unit( 3,"line") )
options(width=120)
options("show.signif.stars"=F)
## set global chunk options
opts_chunk$set(echo=FALSE,
cache=TRUE,
dpi=96,
fig.height=5,
fig.width=7,
prompt=F,
tidy=T,
highlight=T,
dev="png",
dev.args=list(type="cairo"),
fig.align='center',
fig.show='hold',
par=TRUE,
comment=NA,
background="wheat",
prompt=FALSE,
warning=FALSE,
message=FALSE)
info   <- sessionInfo()
r_ver  <- paste(info$R.version$major, info$R.version$minor, sep=".")
barcol <- "wheat"
require(JMisc)
```
require(foreign)
dir  <- "/home/john/Dropbox/Research/Collaboration/BEATS/John/W2S"
#file <- "BEATS_SS_ForWalk2School_150507.sav"
file <- "BEATS_SS_ForWalk2School_160201_COMPLETEdata.sav"
dat <- read.spss( paste(dir, file, sep="/"), to.data.frame=TRUE )
rm(dir, file)
source( "data-setup-W2S.R" )
require(JMisc)
source( "data-setup-W2S.R" )
emp <- NULL
plot_cutoff <- 10000
with( dat.full[dat.full$Dist2School <= plot_cutoff, ],
{
for ( i in 1:length(Dist2School ) )
emp[i] <- prop.table(table(ATS_f[ Dist2School < Dist2School[i]]))["Walk"]
emp_prob <- data.frame( dist=Dist2School, true=ATS_f, prob=emp )
p <- ggplot( emp_prob, aes( dist, prob) )
p <- p + labs(x="Distance to school (m)", y="Probability of Walking to School" )
p <- p + geom_point(size=1)
p <- p + geom_smooth( size=1, method="gam", formula= y ~ s( x, bs = "cs") )
p <- p + annotate("text", label="Optimal distance\nthreshold: ≤ 2,200m\nSensitivity: 84%\nSpecificity: 84%\nAUC: 93%", x=4000, y=0.8, hjust="l")
p + geom_vline(x=2200)
}
)
source( "data-setup.R")
walk_min <- 469
walk_50  <- 3100
walk_max <- 5800
tmp <- dat$ATS_f[dat$Dist2School <= walk_min]
walk_min_n <- sum(table(tmp))
tmp <- dat$ATS_f[dat$Dist2School <= walk_50  ]
walk_50_n  <- sum(table(tmp))
tmp <- dat$ATS_f[dat$Dist2School > walk_max  ]
walk_max_n <- sum(table(tmp))
```
source( "data-setup.R")
walk_min <- 469
walk_50  <- 3100
walk_max <- 5800
tmp <- dat$ATS_f[dat$Dist2School <= walk_min]
walk_min_n <- sum(table(tmp))
tmp <- dat$ATS_f[dat$Dist2School <= walk_50  ]
walk_50_n  <- sum(table(tmp))
tmp <- dat$ATS_f[dat$Dist2School > walk_max  ]
walk_max_n <- sum(table(tmp))
tmp
dim(tmp)[1]
length(tmp)
sum(table(tmp))
walk_max_n
rm(list=ls())
ls()
require(foreign)
dir  <- "/home/john/Dropbox/Research/Collaboration/BEATS/John/W2S"
#file <- "BEATS_SS_ForWalk2School_150507.sav"
file <- "BEATS_SS_ForWalk2School_160201_COMPLETEdata.sav"
dat <- read.spss( paste(dir, file, sep="/"), to.data.frame=TRUE )
rm(dir, file )
source( "data-setup-W2S.R" )
emp <- NULL
plot_cutoff <- 10000
with( dat.full[dat.full$Dist2School <= plot_cutoff, ],
{
for ( i in 1:length(Dist2School ) )
emp[i] <- prop.table(table(ATS_f[ Dist2School < Dist2School[i]]))["Walk"]
emp_prob <- data.frame( dist=Dist2School, true=ATS_f, prob=emp )
p <- ggplot( emp_prob, aes( dist, prob) )
p <- p + labs(x="Distance to school (m)", y="Probability of Walking to School" )
p <- p + geom_point(size=1)
#        p <- p + geom_smooth( size=1, method="gam", formula= y ~ s( x, bs = "cs") )
p <- p + annotate("text", label="Optimal distance\nthreshold: ≤ 2,200m\nSensitivity: 84%\nSpecificity: 84%\nAUC: 93%", x=4000, y=0.8, hjust="l")
p + geom_vline(x=2200)
}
)
with( dat.full[dat.full$Dist2School <= plot_cutoff, ],
{
for ( i in 1:length(Dist2School ) )
emp[i] <- prop.table(table(ATS_f[ Dist2School < Dist2School[i]]))["Walk"]
emp_prob <- data.frame( dist=Dist2School, true=ATS_f, prob=emp )
p <- ggplot( emp_prob, aes( dist, prob) )
p <- p + labs(x="Distance to school (m)", y="Probability of Walking to School" )
p <- p + geom_point(size=1)
#        p <- p + geom_smooth( size=1, method="gam", formula= y ~ s( x, bs = "cs") )
#        p <- p + annotate("text", label="Optimal distance\nthreshold: ≤ 2,200m\nSensitivity: 84%\nSpecificity: 84%\nAUC: 93%", x=4000, y=0.8, hjust="l")
p + geom_vline(x=2200)
}
)
with( dat.full[dat.full$Dist2School <= plot_cutoff, ],
{
for ( i in 1:length(Dist2School ) )
emp[i] <- prop.table(table(ATS_f[ Dist2School < Dist2School[i]]))["Walk"]
emp_prob <- data.frame( dist=Dist2School, true=ATS_f, prob=emp )
p <- ggplot( emp_prob, aes( dist, prob) )
#        p <- p + labs(x="Distance to school (m)", y="Probability of Walking to School" )
p <- p + geom_point(size=1)
#        p <- p + geom_smooth( size=1, method="gam", formula= y ~ s( x, bs = "cs") )
#        p <- p + annotate("text", label="Optimal distance\nthreshold: ≤ 2,200m\nSensitivity: 84%\nSpecificity: 84%\nAUC: 93%", x=4000, y=0.8, hjust="l")
p + geom_vline(x=2200)
}
)
dim(dat.full)
dim(dat.full[dat.full$Dist2School <- plot_cutoff,])
dim(dat.full[dat.full$Dist2School <= plot_cutoff,])
head(dat.full[dat.full$Dist2School <= plot_cutoff,])
require( Gmisc )
source( "data-setup-W2S.R" )
source( "data-setup.R")
walk_min <- 469
walk_50  <- 3100
walk_max <- 5800
tmp <- dat$ATS_f[dat$Dist2School <= walk_min]
walk_min_n <- sum(table(tmp))
tmp <- dat$ATS_f[dat$Dist2School <= walk_50  ]
walk_50_n  <- sum(table(tmp))
tmp <- dat$ATS_f[dat$Dist2School > walk_max  ]
walk_max_n <- sum(table(tmp))
mva( dat.ats, thr=4 )
require(JMisc)
mva( dat.ats, thr=4 )
require( Gmisc )
source( "data-setup.R" )
n.w  <- table(dat.ats$ATS_f)[2]
n.dw <- table(dat.ats$ATS_f)[1]
res  <- data_setup( dat.ats,  "ATS_f", c("Age_Cat", "gender", "eth3",
"BMI_4cat", "cars3", "NZDepCat3",
"tsdecision","Dist2School"))
res  <- data_setup( dat.ats,  "ATS_f", c("Age_at_Survey", "gender", "eth3",
"BMI_2cat", "cars3", "NZDepCat3",
"tsdecision","Dist2School"))
mva( dat.ats, thr=4 )
names(daat)
names(dat)
ats.vars <- c("ID", "school", "ATS_f", "gender",
"HMcars", "NZDepCat3", "PAGuideQ",
"ScrGuide", "whodecides",
"schiclose",
"Dist2School",
"siblings", "Age_at_Survey", "school_decile_n",
"interesting", "pleasant", "boring",
"healthy", "useful", "safe", "exercise", "onway", "time",
"stuff", "sched", "planning", "sweaty", "unsafe", "tired",
"desire", "confd", "control", "intention", "adults", "n_cars",
"parents_walk", "parents_safe","parents_say", "friends_say",
"school_says", "cool", "friends_dont", "weather", "boring_r",
"hills", "regwalk",
"NEStConnect", "NGEsthetics",
"eth3",
"TscWalk", "TscCarOth", "TscCarMy", "TscBusPub", "TscBusSc",
"TSlike", "ATS", "BMI_4cat", "cars3", "tsdecision")
# Subset the data object to contain only the variables of interest
#dat.ats <- dat[ dat$boarder2 == "Not a boarder", ats.vars]
cutoff <- 8000
# Remove implausible cases
outs <- dat$Dist2School > cutoff & dat$ATS_f =="Walk"
dat  <- dat[!outs, ]
dat.ats <- dat[ , ats.vars]
#dat.ats <- dat[ dat$boarder == 1, ]
dat.full <- dat[complete.cases(dat$Dist2School, dat$ATS_f),
c("Dist2School", "ATS_f") ]
names( dat.ats )[ 2] <- "School"
names( dat.ats) [ 3] <- "W2S"
names( dat.ats )[ 4] <- "Sex"
names( dat.ats )[12] <- "Dist"
names( dat.ats )[15] <- "Age"
label(dat.ats[,1]) <- "Respondent ID"
#rm(dat.ats, dat.full, dat, cutoff, outs, ats.vars)
dat.ats <- dat.ats[ dat.ats$Dist2School <= cutoff, ]
dat.ats <- dat.ats[ complete.cases(dat.ats$W2S, dat.ats$Dist, dat.ats$School
#, dat.ats$parents_safe, dat.ats$parents_say, dat.ats$NEStConnect
#, dat.ats$NGEsthetics
), ]
ats.vars <- c("ID", "school", "ATS_f", "gender",
"BMI_f", "BMI_2cat",
"HMcars", "NZDepCat3", "PAGuideQ",
"ScrGuide", "whodecides",
"schiclose",
"Dist2School",
"siblings", "Age_at_Survey", "school_decile_n",
"interesting", "pleasant", "boring",
"healthy", "useful", "safe", "exercise", "onway", "time",
"stuff", "sched", "planning", "sweaty", "unsafe", "tired",
"desire", "confd", "control", "intention", "adults", "n_cars",
"parents_walk", "parents_safe","parents_say", "friends_say",
"school_says", "cool", "friends_dont", "weather", "boring_r",
"hills", "regwalk",
"NEStConnect", "NGEsthetics",
"eth3",
"TscWalk", "TscCarOth", "TscCarMy", "TscBusPub", "TscBusSc",
"TSlike", "ATS", "BMI_4cat", "cars3", "tsdecision")
w2s_env <- c( "NEStConnect", "NGEsthetics")
#outs <- dat$Dist2School > 8000 & dat$ATS_f =="Walk" # Remove implausible values
#dat  <- dat[!outs, ]
# Subset the data object to contain only the variables of interest
dat.ats <- dat[, ats.vars]
dat.full <- dat[complete.cases(dat$Dist2School, dat$ATS_f),
c("Dist2School", "ATS_f") ]
#cutoff <- 4800
cutoff <- 8000
#dat.ats <- dat.ats[ dat.ats$Dist2School <= cutoff, ]
res <- data_setup( dat.ats, "ATS_f", c("school", "BMI_f", "BMI_2cat","HMcars", "ScrGuide",
"whodecides", "schiclose"))
(tab1 <- htmlTable(x = res$tab,
rgroup   = res$rgroup,
n.rgroup = res$ngroup,
label    = "Table1",
caption  = "Categorical individual and household potential correlates of walking to school",
tfoot    = "<small><sup>&dagger;</sup>Variables are reported in counts and percentages: count (%). The <i>p</i>-values are from Fisher tests. The total proportions are calculated vertically, and the others are calulated horizontally.</small>",
rowlabel = "Variable<sup>&dagger;</sup>",
css.rgroup = "font-weight: 100",
ctable   = TRUE ))
rm( tab1 )
```
</center>
&nbsp;
<center>
```{r descriptives-cont, cache=FALSE}
require( Gmisc )
source( "data-setup.R" )
res <- data_setup( dat.ats , "ATS_f", names(dat.ats)[c(16, 13:14, 17:50)])
(tab2 <- htmlTable(x = res$tab,
rgroup   = res$rgroup,
n.rgroup = res$ngroup,
label    = "Table1",
caption  = "Continuous individual potential correlates of walking to school",
tfoot    = "<small><sup>&dagger;</sup>The <i>p</i>-values are from  Wilcoxon tests.</small>",
rowlabel = "Variable<sup>&dagger;</sup>",
css.rgroup = "font-weight: 100",
ctable   = TRUE ))
mva( dat.ats, thr = 4 )
